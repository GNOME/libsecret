stages:
  - build
  - deploy

variables:
  DEPENDENCIES: dbus-x11 gcc gjs meson python3-dbus python3-gobject redhat-rpm-config

fedora:Werror:
  image: fedora:latest
  stage: build
  before_script:
    - dnf upgrade -y
    - dnf install -y 'dnf-command(builddep)'
    - dnf builddep -y libsecret
    - dnf install -y $DEPENDENCIES
    - dbus-uuidgen --ensure
  script:
    - meson . _build
    - ninja -j$(nproc) -C _build -v
    - eval `dbus-launch --sh-syntax`
    - ninja -j$(nproc) -C _build test

fedora:asan:
  image: fedora:latest
  stage: build
  before_script:
    - dnf upgrade -y
    - dnf install -y 'dnf-command(builddep)'
    - dnf builddep -y libsecret
    - dnf install -y $DEPENDENCIES libasan
    - dbus-uuidgen --ensure
  script:
    - meson . _build -Dc_args='-fsanitize=address -g -fno-common -U_FORTIFY_SOURCE' -Dcpp_args='-fsanitize=address -g -fno-common -U_FORTIFY_SOURCE' -Dc_link_args='-fsanitize=address -g -fno-common -U_FORTIFY_SOURCE -lasan -ldl -lpthread'
    - ninja -j$(nproc) -C _build -v
    - eval `dbus-launch --sh-syntax`
    - ninja -j$(nproc) -C _build test

fedora:ubsan:
  image: fedora:latest
  stage: build
  before_script:
    - dnf upgrade -y
    - dnf install -y 'dnf-command(builddep)'
    - dnf builddep -y libsecret
    - dnf install -y $DEPENDENCIES libubsan
    - dbus-uuidgen --ensure
  script:
    - meson . _build -Dc_args='-fsanitize=undefined -g -fno-common -U_FORTIFY_SOURCE' -Dcpp_args='-fsanitize=undefined -g -fno-common -U_FORTIFY_SOURCE' -Dc_link_args='-fsanitize=undefined -g -fno-common -U_FORTIFY_SOURCE -lubsan -ldl -lpthread'
    - ninja -j$(nproc) -C _build -v
    - eval `dbus-launch --sh-syntax`
    - ninja -j$(nproc) -C _build test

fedora:coverage:
  image: fedora:latest
  stage: build
  before_script:
    - dnf upgrade -y
    - dnf install -y 'dnf-command(builddep)'
    - dnf builddep -y libsecret
    - dnf install -y $DEPENDENCIES lcov
    - dbus-uuidgen --ensure
  script:
    - meson . _build -Db_coverage=true
    - ninja -j$(nproc) -C _build -v
    - eval `dbus-launch --sh-syntax`
    - ninja -j$(nproc) -C _build test
    - ninja -j$(nproc) -C _build coverage-html
  coverage: '/^\s+lines.+:\s+([\d.]+\%)\s+/'
  artifacts:
    name: "libsecret-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
      - _build/meson-logs/coveragereport/

pages:
  stage: deploy
  script:
    - mv _build/meson-logs/coveragereport/ public/
  artifacts:
    paths:
      - public
